/** grid **/
.columns {
  position: relative;
  min-height: 1px;
  /** padding of .75em on each side creates nice 1.5em gutters that then will get biggere/smaller as type sizes increase/decrease **/
  padding-right: .75em;
  padding-left: .75em;
  line-height: 1.5em;
  /** allows for better "adaptive" styling AND matching of gutter widths to line-heights **/
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

/* Visibility Classes */
.show {
  display: block !important;
}
.hidden {
  display: none !important;
}
.invisible {
  visibility: hidden;
}

.visible-lg,
.hidden-sm {
  display: none;
  visibility: hidden;
}

.hide-text {
  text-indent: 200%;
  white-space: nowrap;
  overflow: hidden;
}

.show-text {
  text-indent: 0%;
  white-space: normal;
  overflow: visible;
}

/* floats and clears */
.left,
.floatleft,
.float-left,
.leftfloat,
.left-float {
  float: left;
}

.right,
.floatright,
.float-right,
.rightfloat,
.right-float {
  float: right;
}

.clear,
.clearboth,
.clear-both,
.both-clear,
.bothclear {
  clear: both;
}
.clearleft,
.leftclear,
.clear-left,
.left-clear {
  clear: left;
}
.clearright,
.rightclear,
.clear-right,
.right-clear {
  clear: right;
}

.add-clearfix {
    content: '';
    display: table;
    clear: both;
}

.clearfix,
.clear-fix,
.cf,
.group {
  &::after {
     .add-clearfix;
  }
}

/*
  center, left and right align text.
  it is my personal opinion that you should never use "text-align: justify;" on the web.
  browsers aren't good enough at typesetting justified text.
  I have not created those styles for that reason.
*/
.text-center,
.textcenter,
.center-text,
.centertext,
.align-center,
.center-align,
.aligncenter,
.centeralign {
  text-align: center;
}

.text-right,
.right-text,
.textright,
.righttext,
.align-right,
.right-align,
.alignright,
.rightalign {
  text-align: right;
}

.text-left,
.left-text,
.textleft,
.lefttext,
.align-left,
.left-align,
.alignleft,
.leftalign {
  text-align: left;
}

/* columnar stuff */
#wrapper,
.wrapper,
.container {
  margin: 0 auto;
  padding: 0 1rem 2rem 1rem;
  width: 100%;
}

.group,
.grouped,
.row {
  margin: 0 0 2rem 0;
}

.column,
.columns {
  margin: 0 0 2rem 0;
  padding: 0;
}

.one,
.two,
.three,
.four,
.five,
.six,
.seven,
.eight,
.nine,
.ten,
.eleven,
.twelve,
.thirteen,
.fourteen,
.fifteen  { .col(15); }

[class*="offset-by-"]      { .col-offset(00); }

@media (min-width: 30rem) {
  #wrapper,
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    min-width: 30rem;
    width: 80%;
  }
}

@media (min-width: 52em) { /**52em is medium cutoff from BassCss **/
  #wrapper,
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    max-width: 75rem;
  }

  .group,
  .grouped,
  .row {
    margin: 0 -1rem 2rem -1rem;
  }

  /* columnar stuff */
  .column,
  .columns {
    float: left;
    margin: 0 0 2rem 0;
    padding: 0 1rem;
  }

  .column.right,
  .columns.right {
    float: right;
  }

  .one      { .col(01); }
  .two      { .col(02); }
  .three    { .col(03); }
  .four     { .col(04); }
  .five     { .col(05); }
  .six      { .col(06); }
  .seven    { .col(07); }
  .half     { width: 50%; }
  .eight    { .col(08); }
  .nine     { .col(09); }
  .ten      { .col(10); }
  .eleven   { .col(11); }
  .twelve   { .col(12); }
  .thirteen { .col(13); }
  .fourteen { .col(14); }
  .fifteen  { .col(15); }
  /** is there a more programmatic way to do this with less? some sort of function that would generate all of these??? **/

  .offset-by-one      { .col-offset(01); }
  .offset-by-two      { .col-offset(02); }
  .offset-by-three    { .col-offset(03); }
  .offset-by-four     { .col-offset(04); }
  .offset-by-five     { .col-offset(05); }
  .offset-by-six      { .col-offset(06); }
  .offset-by-seven    { .col-offset(07); }
  .offset-by-half     { margin-left: 50%; }
  .offset-by-eight    { .col-offset(08); }
  .offset-by-nine     { .col-offset(09); }
  .offset-by-ten      { .col-offset(10); }
  .offset-by-eleven   { .col-offset(11); }
  .offset-by-twelve   { .col-offset(12); }
  .offset-by-thirteen { .col-offset(13); }
  .offset-by-fourteen { .col-offset(14); }
  .offset-by-fifteen  { .col-offset(15); }
}

